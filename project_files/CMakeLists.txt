# Generated by quick cmake


cmake_minimum_required(VERSION 3.2)
set(CMAKE_SUPPRESS_REGENERATION true)
set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "" FORCE)
set(CMAKE_CXX_STANDARD 17)
if("${CMAKE_GENERATOR}" MATCHES "^Visual Studio.*")
  set(CMAKE_GENERATOR_PLATFORM "x64" CACHE INTERNAL "" FORCE)
endif()


project(friendly_enum)
set (PROJECT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../)
set (SOURCE_DIR ${PROJECT_DIR}/sources)
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_DIR}/lib)
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_DIR}/lib)
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_DIR}/bin)
include_directories(${SOURCE_DIR})


add_compile_options(/Zc:preprocessor)
# module friendly_enum
FILE(GLOB friendly_enum ${SOURCE_DIR}/friendly_enum/enum_traiter.h ${SOURCE_DIR}/friendly_enum/friendly_enum.h)
FILE(GLOB friendly_enum_test_case ${SOURCE_DIR}/friendly_enum/test_case/enum_a.h ${SOURCE_DIR}/friendly_enum/test_case/enum_b.h)
FILE(GLOB friendly_enum_BUILD_TARGET_FILE_GROUP ${SOURCE_DIR}/friendly_enum/build.py)
source_group("sources" FILES ${friendly_enum})
source_group("sources\\test_case" FILES ${friendly_enum_test_case})
add_library(friendly_enum STATIC ${friendly_enum}  ${friendly_enum_test_case}  ${friendly_enum_BUILD_TARGET_FILE_GROUP} )
target_include_directories(friendly_enum 
 PUBLIC ${SOURCE_DIR}/friendly_enum PUBLIC ${PROJECT_DIR}/third_parties/googletest/include)
target_link_libraries(friendly_enum  general ${PROJECT_DIR}/third_parties/googletest/lib/windows/Release/gtest.lib
 general ${PROJECT_DIR}/third_parties/googletest/lib/windows/Release/gtest_main.lib
)
set_target_properties(friendly_enum PROPERTIES LINKER_LANGUAGE CXX)


# module test_friendly_enum_enum_traiter
FILE(GLOB test_friendly_enum_enum_traiter ${SOURCE_DIR}/friendly_enum/enum_traiter_test.cpp)
source_group("ut_file" FILES ${test_friendly_enum_enum_traiter})
add_executable(test_friendly_enum_enum_traiter ${test_friendly_enum_enum_traiter} )
target_include_directories(test_friendly_enum_enum_traiter 
 PUBLIC ${SOURCE_DIR}/friendly_enum PUBLIC ${PROJECT_DIR}/third_parties/googletest/include)
target_link_libraries(test_friendly_enum_enum_traiter  general ${PROJECT_DIR}/third_parties/googletest/lib/windows/Release/gtest.lib
 general ${PROJECT_DIR}/third_parties/googletest/lib/windows/Release/gtest_main.lib
)
set_target_properties(test_friendly_enum_enum_traiter PROPERTIES LINKER_LANGUAGE CXX)


# module test_friendly_enum_friendly_enum
FILE(GLOB test_friendly_enum_friendly_enum ${SOURCE_DIR}/friendly_enum/friendly_enum_test.cpp)
source_group("ut_file" FILES ${test_friendly_enum_friendly_enum})
add_executable(test_friendly_enum_friendly_enum ${test_friendly_enum_friendly_enum} )
target_include_directories(test_friendly_enum_friendly_enum 
 PUBLIC ${SOURCE_DIR}/friendly_enum PUBLIC ${PROJECT_DIR}/third_parties/googletest/include)
target_link_libraries(test_friendly_enum_friendly_enum  general ${PROJECT_DIR}/third_parties/googletest/lib/windows/Release/gtest.lib
 general ${PROJECT_DIR}/third_parties/googletest/lib/windows/Release/gtest_main.lib
)
set_target_properties(test_friendly_enum_friendly_enum PROPERTIES LINKER_LANGUAGE CXX)


# run all unittest under folder friendly_enum
add_custom_target(test_friendly_enum DEPENDS test_friendly_enum_enum_traiter test_friendly_enum_friendly_enum COMMAND echo run unittest files test_friendly_enum/friendly_enum/enum_traiter_test.cpp COMMAND $<TARGET_FILE:test_friendly_enum_enum_traiter>
 COMMAND echo run unittest files test_friendly_enum/friendly_enum/friendly_enum_test.cpp COMMAND $<TARGET_FILE:test_friendly_enum_friendly_enum>
)

